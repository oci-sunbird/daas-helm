global:
  hostname: spar.openg2p.sandbox.net

replicaCount: 1
image:
  repository: openg2p/social-payments-account-registry
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "develop"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

containerPort: 8000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # kubernetes.io/tls-acme: "true"
  hosts:
    - paths:
        - path: /spar/v1(/|$)(.*)
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  #  requests:
  #    cpu: 500m
  #    memory: 2G

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

envVars:
  SPAR_CORE_DB_HOSTNAME: '{{ include "postgresql.v1.primary.fullname" .Subcharts.postgresql }}'
  SPAR_CORE_DB_USERNAME: "sparuser"
  SPAR_CORE_OPENAPI_ROOT_PATH: "/spar/v1"
  SPAR_CORE_AUTH_DEFAULT_ISSUERS: '["https://esignet.openg2p.sandbox.net/v1/esignet"]'
  SPAR_CORE_AUTH_DEFAULT_JWKS_URLS: '["https://esignet.openg2p.sandbox.mosip.net/v1/esignet/oauth/.well-known/jwks.json"]'
  SPAR_CONNECTOR_G2PCONNECT_MAPPER_API_TIMEOUT_SECS: "1"

  # Change to these url according to ID Mapper provider
  # Use this for SPAR Mapper
  SPAR_CONNECTOR_G2PCONNECT_MAPPER_RESOLVE_URL: "http://mapper/mapper/resolve"
  SPAR_CONNECTOR_G2PCONNECT_MAPPER_LINK_URL: "http://mapper/mapper/link"
  SPAR_CONNECTOR_G2PCONNECT_MAPPER_UPDATE_URL: "http://mapper/mapper/update"
  # Use this for Sunbird Mapper Registry
  # SPAR_CONNECTOR_G2PCONNECT_MAPPER_RESOLVE_URL: "http://mapper/v0.1.0/mapper/resolve"
  # SPAR_CONNECTOR_G2PCONNECT_MAPPER_LINK_URL: "http://mapper/v0.1.0/mapper/link"
  # SPAR_CONNECTOR_G2PCONNECT_MAPPER_UPDATE_URL: "http://mapper/v0.1.0/mapper/update"

  SPAR_CONNECTOR_G2PCONNECT_MAPPER_RESOLVE_SENDER_URL: 'http://{{ include "spar.fullname" . }}/internal/callback/mapper'
  SPAR_CONNECTOR_G2PCONNECT_MAPPER_LINK_SENDER_URL: 'http://{{ include "spar.fullname" . }}/internal/callback/mapper'
  SPAR_CONNECTOR_G2PCONNECT_MAPPER_UPDATE_SENDER_URL: 'http://{{ include "spar.fullname" . }}/internal/callback/mapper'
  SPAR_CONNECTOR_G2PCONNECT_QUEUE_REDIS_HOST: '{{ include "common.names.fullname" .Subcharts.redis }}-master'

envVarsFrom:
  SPAR_CORE_DB_PASSWORD:
    secretKeyRef:
      name: '{{ include "postgresql.v1.primary.fullname" .Subcharts.postgresql }}'
      key: password

istio:
  enabled: true
  virtualservice:
    enabled: true
    host: ""
    gateway: "istio-system/all-hosts"
    prefix: "/spar/v1/"
    rewriteUri: "/"
  gateway:
    enabled: false
    host: ""
    ingressController:
      istio: ingressgateway
    httpTlsRedirect: true
    tls:
      enabled: true
      mode: SIMPLE
      credentialName: ""

postgresql:
  enabled: true
  auth:
    username: sparuser
    database: spardb
  primary:
    extendedConfiguration: |-
      wal_level = logical
      max_wal_senders = 20
      max_replication_slots = 10

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false

# Choose between either of the following mappers. Or disable both if using external mapper.
# Accordingly the URLs above in SPAR_CONNECTOR configs will need to be edited.
# Defaults to SPAR Mapper
spar-g2pconnect-id-mapper:
  enabled: true
  fullnameOverride: mapper
  postgresql:
    enabled: false
  envVars:
    SPAR_G2PCONNECT_MAPPER_DB_HOSTNAME: spar-postgresql # Change this value acc to name of the helm release.
  envVarsFrom:
    SPAR_G2PCONNECT_MAPPER_DB_PASSWORD:
      secretKeyRef:
        name: spar-postgresql # Change this value acc to name of the helm release.

sunbird-rc-g2p-mapper-registry:
  enabled: false
  fullnameOverride: mapper
  registry:
    fullnameOverride: mapper-registry
    elasticsearch:
      fullnameOverride: mapper-registry-elasticsearch
    postgresql:
      enabled: false
    envVars:
      connectionInfo_uri: 'jdbc:postgresql://spar-postgresql:5432/spardb' # Change this value acc to name of the helm release.
      connectionInfo_username: sparuser
    envVarsFrom:
      connectionInfo_password:
        secretKeyRef:
          name: 'spar-postgresql' # Change this value acc to name of the helm release.
          key: password

postgresInit:
  enabled: true
  image: jbergknoff/postgresql-client
  imagePullPolicy: Always
  restartPolicy: Never
  envVars:
    GIT_REPO_URL: 'https://github.com/openg2p/social-payments-account-registry'
    GIT_BRANCH: 'develop'
    DEPLOY_DDL: 'false'
  envVarsFrom: {}
  backoffLimit: 1
  command:
  - sh
  - -c
  - >-
    sleep 10s;
    apk --no-cache add bash gettext git;
    export DB_HOST=$SPAR_CORE_DB_HOSTNAME;
    export DB_USER=$SPAR_CORE_DB_USERNAME;
    export DB_USER_PASSWORD=$SPAR_CORE_DB_PASSWORD;
    git_repo_name="$(basename "$GIT_REPO_URL" .git)";
    git clone --depth 1 --branch $GIT_BRANCH $GIT_REPO_URL &&
    cd $git_repo_name/db_scripts &&
    ./deploy.sh
