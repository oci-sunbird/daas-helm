# Default values for registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

service:
  type: ClusterIP
  port: 6002

# Supported app mode - bap or bpp. Gateway mode to be either client or network.
app:
  mode: bpp
  gateway:
    mode: client

resources:
  # Adjust it as per desired POD resource demand 
  requests:
    cpu: "0.5"
    memory: "1Gi"
  limits:
    cpu: "0.5"
    memory: "1Gi"

livenessProbe: {}
  # httpGet:
  #  path: /
  #  port: http
readinessProbe: {}
  # httpGet:
  #  path: /
  #  port: http

# To configure HPA
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

externalDomain: bpp-client.example.com
webhookDomain: sandbox.example.com

config: |
  # Mandatory
  server:
    port: 6002
  # Redis connection details
  cache:
    host: redis-master.bpp-common-services.svc.cluster.local
    port: 6379
    ttl: "PT10M"
    # Optional. Default is 0.
    db: 1
  # Mongodb connection details
  responseCache:
    # By default password is picked from MongoDB POD if not supplied through Helm values.
    mongoURL: "mongodb://root:password@mongodb.bpp-common-services.svc.cluster.local:27017/protocol_server?authSource=admin"
    ttl: "PT10M"
  # synchronous only required for BPP
  client:
  # Only required for BPP
    webhook:
      url: "http://sandbox.beckn-onix-aws-cdk.becknprotocol.io"
  # Supported mode - bap and bpp
  app:
    mode: bpp
    # Two types of gateway mode present - client and network
    gateway:
      mode: network
      inboxQueue: "inbox-bpp"
      outboxQueue: "outbox-bpp"
      # RabbitMQ connection details
      # By default password is picked from RabbitMQ POD if not supplied through Helm values.
      amqpURL: "amqp://beckn:password@rabbitmq.bpp-common-services.svc.cluster.local:5672?frameMax=0x2000"
    # Mandatory.
    actions:
      requests:
        search:
          ttl : "PT15S"
        init:
          ttl : "PT10S"
        select:
          ttl : "PT10S"
        confirm:
          ttl : "PT10S"
        status:
          ttl : "PT10S"
        track:
          ttl : "PT10S"
        cancel:
          ttl : "PT10S"
        update:
          ttl : "PT10S"
        rating:
          ttl : "PT10S"
        support:
          ttl : "PT10S"
        get_cancellation_reasons:
          ttl : "PT10S"
        get_rating_categories:
          ttl : "PT10S"
        cancellation:
          ttl : "PT10S"
      
      responses:
        on_search:
          ttl: "PT15S"
        on_init:
          ttl: "PT10S"
        on_select:
          ttl: "PT10S"
        on_confirm:
          ttl: "PT10S"
        on_status:
          ttl: "PT10S"
        on_track:
          ttl: "PT10S"
        on_cancel:
          ttl: "PT10S"
        on_update:
          ttl: "PT10S"
        on_rating:
          ttl: "PT10S"
        on_support:
          ttl: "PT10S"
        cancellation_reasons:
          ttl: "PT10S"
        rating_categories:
          ttl: "PT10S"
    # Mandatory keys
    privateKey: private-key
    publicKey: public-key
    
    # Subscriber details
    subscriberId: bpp-network.example.com
    subscriberUri: "https://bpp-network.example.com"

    # Registry 
    registryUrl: "registry.example.com/subscribers"
    auth: false
    # BPP client key ID
    uniqueKey: "bpp-network.example.com.k1"
    
    # Mandatory
    city: "std:080"
    country: "IND"
    # Mandatory
    ttl: "PT10M"
    # Mandatory
    httpTimeout: "PT3S"
    httpRetryCount: 2
    telemetry:
      enabled: false
      url: ""
      batchSize: 100
      # In minutes
      syncInterval: 30
      redis_db: 3
    useLayer2Config: true
    mandateLayer2Config: true